@page "/"
@using Blazor.Extensions
@using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
@using Rummy.Shared.Models
@inject LocalStorage Storage

@*<SurveyPrompt Title="How is Blazor working for you?" />*@

@if (user != null)
{
    <div class="container">
        <input type="text" id="message" class="form-control" bind="@message" />
        <input type="button" id="sendMessage" value="Send" class="btn btn-primary" onclick="@SendMessage" />
        <ul id="discussion">
            @foreach (var message in messages)
            {
                <li>@message</li>
            }
        </ul>
    </div>
}

@functions{
    HubConnection connection;
    string user;
    string message = "";
    IList<string> messages = new List<string>();

    protected override async Task OnInitAsync()
    {
        var auth = Storage.GetItem<AuthResponse>("auth");
        user = auth.Email;
        connection = new HubConnectionBuilder().WithUrl("/chathub").Build();
        connection.On<string, string>("ReceiveMessage", this.OnBroadcastMessage);
        await connection.StartAsync();
    }

    Task OnBroadcastMessage(string name, string message)
    {
        messages.Add(name + " : " + message);
        StateHasChanged();
        return Task.CompletedTask;
    }

    async Task SendMessage()
    {
        await connection.InvokeAsync("SendMessage", user, message);
        message = "";
    }
}


@page "/waitingRoom/{RoomName}"
@using Services
@inject IUriHelper UriHelper

<AuthorizeView>
    <Authorized>
        <div class="waiting-room">
            <h2>@RoomName</h2>
            <h3>Players:</h3>
            @foreach (var player in players)
            {
                <div>@player</div>
            }
            <Chat Username="@userName" Room="@room"/>

            <button class="btn btn-primary" @onclick="@QuitRoom">Quit room</button>
            <button class="btn btn-primary" @onclick="@StartGame">Start game</button>

        </div>
    </Authorized>
    <NotAuthorized>
        Log in!
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    [Parameter]
    private string RoomName { get; set; }

    List<string> players = new List<string>();
    string userName;

    RoomState room;

    protected override async Task OnInitAsync()
    {
        room = AllRoomsState.Rooms[RoomName];

        room.OnPlayerJoin += PlayerJoined;
        players = room.Players;

        room.OnStartGame += GameStarted;

        var authState = await authenticationStateTask;
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            userName = user.Identity.Name;
        }
    }

    void PlayerJoined()
    {
        players = room.Players;
        Invoke(() => StateHasChanged());
    }

    public void GameStarted()
    {
        UriHelper.NavigateTo($"/gameRoom/{RoomName}");
    }

    void StartGame()
    {
        room.StartGame();
    }

    void QuitRoom()
    {
         UriHelper.NavigateTo($"/");
    }
}

@layout LoginLayout
@page "/login"
@using Rummy.Shared.Models
@using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
@using System.Text
@inject LocalStorage Storage
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<div class="container-fluid">
    <h1>Login</h1>
    <form>
        <div class="container">
            <label><b>Email</b></label>
            <input type="text" name="email" placeholder="Enter Email" bind="@user.Email" required />

            <label><b>Password</b></label>
            <input type="password" name="password" placeholder="Enter Password" bind="@user.Password" required />

            <button type="button" onclick="@LoginClick">Login</button>
        </div>
    </form>

    <NavLink class="nav-link" href="register">
        Register
    </NavLink>
    <p>@ErrorMessage</p>
</div>

@functions {
    public User user = new User();
    public string ErrorMessage { get; set; } = "asd";

    async void LoginClick()
    {
        var stringContent = new StringContent(Json.Serialize(user), Encoding.UTF8, "application/json");
        var httpResponse = await Http.PostAsync("api/Auth/login", stringContent);
        if (httpResponse.IsSuccessStatusCode)
        {

            var auth = Json.Deserialize<AuthResponse>(await httpResponse.Content.ReadAsStringAsync());
            Storage.SetItem("auth", auth);
            UriHelper.NavigateTo("");
        }
        else
        {
            ErrorMessage = "Invalid username or password";
            this.StateHasChanged();
        }
    }
}
